buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

plugins {
	id "org.flywaydb.flyway" version "5.0.7"
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'com.palantir.docker'

group = 'com.jan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'org.apache.logging.log4j:log4j-bom:2.11.0'
	}
}
dependencies {

	compile ('org.apache.logging.log4j:log4j-api')
	compile ('org.apache.logging.log4j:log4j-core')

	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('org.postgresql:postgresql')
	runtime('com.h2database:h2')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	//testCompile('org.springframework.security:spring-security-test')
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/recruitment'
	user = 'cnguser'
	password = 'cnguser'
}

task frontendBuild(dependsOn: 'web:prod_build'){}

bootJar {
	baseName = 'recruiment-boot-docker'
	version =  '1.0.0'
}
group = 'janaganh'

docker {
	name "${project.group}/${bootJar.baseName}"
	files bootJar.archivePath
	buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

bootJar.dependsOn 'frontendBuild'
